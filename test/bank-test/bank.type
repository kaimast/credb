{
liabilities: dict := {}
assets     : dict := {}
    
create_account: func :=
import db

tx = db.init_transaction()


name = argv[0]

if self.contains("assets", name) or self.contains("liabilities", name):
    print("account already exists!")
    return False

self.put("liabilities."+name, 0)
print("created account: " + str(name))
return True
;

move_money_locally: func :=
import self

acc_from = argv[0]
acc_to   = argv[1]
amount   = int(argv[2])

if not self.contains("liabilities", acc_from):
    print("Source account doesn't exist: " + acc_from)
    return False

if not self.contains("liabilities", acc_to):
    print("Destination account does not exist: " + acc_to)
    return False

if amount <= 0:
    return False

print(acc_from + " -> " + acc_to + ": " + str(amount))

self.add("liabilities."+acc_from, (-1) * amount)
self.add("liabilities."+acc_to,   (+1) * amount)
return True
;

move_money_remotely: func :=
import self
import db

acc_from  = argv[0]
acc_to    = argv[1]
rbank     = argv[2]
amount    = int(argv[3])
collection= argv[4]

rname = self.get("assets."+rbank)

if not self.contains("liabilities", acc_from):
    print("No such account: " + acc_from)
    return False

if not rname:
    print("Remote bank not linked: " + rbank)
    return False

if amount <= 0:
    print("Can only move values > 0")
    return False

if not self.get("liabilities."+acc_from) < amount:
    print("Not enough money in account")
    return False

res = db.call_on_peer(collection, rbank, "accounts.move_money_locally", [rname, acc_to, str(amount)])

if not res:
    print("call on peer failed")
    return False

self.add("liabilities."+acc_from, (-1)*amount)
return True
;

credit: func :=
import self

name = argv[0]
amount = int(argv[1])

if not self.contains("liabilities", name):
    print("no such account: " + name)
    return False

if amount <= 0:
    print("cannot credit <= 0")
    return False

self.add("liabilities."+name, amount)
return True
;

link_account: func :=
import self

rbank = argv[0]
rname = argv[1]

self.put("assets."+rbank, rname)
return True
;
}
