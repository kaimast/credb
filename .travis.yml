sudo: required
language: cpp
services:
  - docker
cache:
  directories:
    - $CACHE_DIR
env:
  global:
    - CACHE_DIR=$HOME/.cache/docker
    - CACHE_FILE_PEERDB_DEP=$CACHE_DIR/credb-dep.tar.gz
  matrix:
    - sgx_mode=simulation downstream=1
    - sgx_mode=simulation downstream=0
    - sgx_mode=fake_enclave downstream=1
    - sgx_mode=fake_encalve downstream=0

before_install:
  - mkdir -p $CACHE_DIR
  # - docker build -t credb-dep -f docker/credb-dep.Dockerfile .
  - |
    if [ -f ${CACHE_FILE_PEERDB_DEP} ]; then
      gunzip -c ${CACHE_FILE_PEERDB_DEP} | docker load
    else
      docker build -t credb-dep -f docker/credb-dep.Dockerfile .
      docker save credb-dep | gzip > ${CACHE_FILE_PEERDB_DEP}
    fi
install:
  - docker build -t credb -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode --build-arg buildtype=release .
script:
  - docker run --rm -it -e sgx_mode  credb ../docker/run-clang-tidy.sh
  - docker run --rm -it -e sgx_mode  credb ../docker/run-doxygen.sh
  - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream   credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=multi_get                 credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=multi_put                 credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=multi_downstream          credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=witness                   credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=call_program              credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb ../docker/run-test.sh
  - docker run --rm -it -e sgx_mode -e run_test=multi_update              credb ../docker/run-test.sh
