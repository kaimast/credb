sudo: required
language: cpp
services:
- docker
cache:
  directories:
  - "$CACHE_DIR"
env:
  global:
  - CACHE_DIR=$HOME/.cache/docker
  - CACHE_FILE_CREDB_DEP=$CACHE_DIR/credb-dep
  - CACHE_FILE_CRED=$CACHE_DIR/credb
  - secure: nlFedwh0W/jeg2KTaV+nAaEIk9+ex27AGJA//yRJFTHxuZXs+IjJttNkHPSPdMJNPyhFZy7gJ3SXWI9S0jIvNvnqz9lb+Nt0lWBvhrPzxhpfGoJ3eYTq8vBaNRwfIs5CTngLQMAev2xsZlLSs8BV3+DZJ0zE/adFlz2uBRxxVJUdnssaOFf2UeLOzQnOY/7PpcTLBj3sZ6vc1E6QfK4TVAYtJIOgw7PpRNC9gMjsjA+oeKR11282dsV0XJLRTvjFaCOhQ315QXt6LevxTKQB9GwDsCDJ0jkBlRdRg2Z9668aunmjaTGURwNYWNKuAjtbBwXuZf/p6nxdCcjWA4VX+6F3Jb3dR9lzZIf3QZrgsHpO0SoBj3JKIRENu8mEL3RQXz3ljmZpUB/4dg433mfSmLcINMibWcmrLE+iydPgPWhQbBsZRDQgnnsZs4CNVWdXUqpwNctOc/JD+Z903rpGKdOfJePiL7cfKQhiJb6E11wbxdxnJenyI5MR2FWiK3ehoSgjjUiz2bznExNDe/wwZifL6vIHk73JWJuT5YczpTNHUb8vhpjz4RbusXU/c41ElEy4OGu/2L8uT89PofT6E6JUPQiBXzqhV3jjlPu2rKUOX7jifSEYRVZAaWJ9E7iFLrDit8C6UkLc0bo3LOqo0LgZjeFLgzjyQpdPkGLuSCw=
  - secure: a47m2d0CezC9/jl/OpKSa2PUzuuLtd0RF5NzfNqgbQj1AZnm7MRbYwDQHiCIi1m5EjzOYpZO+EZ7NocW4r1/amSfB227DAFbNvCw4tE7NrxPR5xYljt5+tkV7MYLftJh0a0Ym/0iTkf8aK4oM9eSXQJqZ8SeDEiGRH3izJ7EopVWylKoWV2JuVa13rYQmCLfSrotryODombK7tzas384QU2atAq32TeGY8leHTRNcFA314nTEEITSeqpTlmhfGDUcLpvhc/qJ4JsmAf8cYX4i8CVmp3I8EeqkYHNJBcz7+olT5ayXFNMdCGQDgihC7o2+oFO7UOPGu8gdJ+yrCW/RdLQrFsE1SxsAew/b5HPYGNUsCE9xkS6YOwwddTaOQbwuFhMaO9AmDTcRbIr3g394eL9jtJ6W0/0Kof3LdHKq4sueYtZMMwTgpO7jXG9y/KWxnwfzwV3KPkz8Jj1wi/58+/bnyPb6Kt2pC/z7b4SG9tFoDSBFiA2bAeI7SwpCP5Vbz/NB74o7RruuDg6YOdbQ8LDbI/vXck3GuetcYM+PT7az4oxiLS5deCC7XHqDRbrG7tt9ip3TYkrUIaxyUwcpx2z3sDiGMwzURB8WIJ8cIZzcnUoLkylTbYVnN/7ajOIJ1RVaCtc4wXwrEY+mouFq9hMy59eR/adzmAUT4wkwa4=
before_install: 
jobs:
  include:
  - stage: prereq
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker build -t credb-dep -f docker/credb-dep.Dockerfile .
    - docker tag credb-dep $DOCKER_USERNAME/credb-dep
    - docker push $DOCKER_USERNAME/credb-dep
  - stage: build
    env: sgx_mode=simulation
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode
      --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: build
    env: sgx_mode=fake_enclave
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode
      --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb ../docker/run-test.sh
    #TODO- docker run --rm -it -e sgx_mode -e run_test=multi_downstream  credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
    #TODO    - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
