sudo: required
language: cpp
services:
- docker
cache:
  directories:
  - "$CACHE_DIR"
env:
  global:
  - CACHE_DIR=$HOME/.cache/docker
  - CACHE_FILE_CREDB_DEP=$CACHE_DIR/credb-dep
  - CACHE_FILE_CRED=$CACHE_DIR/credb
  - secure: jCihLMKxMYbQBMweSsVha6DSrcdYDTuqvIxNsiIbHcwAHZVtDalf5JVLZ5ngnvY393SIOon8OMPm9NDJltQBBywx2t4zP6AlN6gP2PDunZBEIc3w/j2yQd7v7er4aCZZTOD2DjklLA/bpDyg52bOWOjRgzqPEMbPkW+7A6TEz6yK9Y6x1qNVYw/NGxLyzSVo2eIW/PebsjmH2g+8N0+SguuOeuW9iH5Y1echU+KvJMFjp9sH1tAE0v4tMHa1xx8sm1xhaung0mrO3zSK8ypft2wgC54bUafQ1Zd02WsTEqJErtbCMbF5PN5iQoNh1FAZUXP9iIDSY/YsMMP52n3Db8AxYqNV6B31+uK3Dej9lnA2zTIdVZe5ToEurpOiz5yDvAa5bMBhGks2cu2OOIQzwLmy7isA2YqgfgB53+JyiFqDlAoejxLUdSAqgo5wZ3TKud0tUrzGJ/CeGYsHU21p6n8Fph2pDHC4lpk0xNFtCyloOAgjQbTf0Un4fHSvf/Evt7zAC4uerbJYs83J+tXsqA81SXH/0rqUBjUEbiw5AJm49gL3XU0EPG1cizJiLRIMIw6X5RC+mUkMLEkKdDTpbnGg6hwAFNKrr8wht2UGIHDeUVsXOyFj0eXrXbyhRJLw5YUy+gjRHr6AN8Ejr12PEUgvngvagVliD63tt2kmy5Q=
  - secure: HovnsVeMZm9YjrrZJV/yTsZCbz+Q4vjT0EaoF2v43PArzcG2WLeRrFTYLH9HI1abC+6l7amlOyM+u8n0JERgHRw+9mNYyuz10futaHyyNTmDmCYJkCmCOH2v6BpMHUSPDmx1lPsaZ0x0ZI8dT4HaU7VGqV5dEZLiqIeSAYaLEoJcvSFs6k06roVGZasczhqlWlcV5Qc/h6qQcOQbjGqXwzzhAbcWQ3NY+VjCoOkFJCDnJ9d2cTbJbGwALb0KyAbtWwuDCqJluxvDyyvEnkKTTJE50Igk/3m80mHZNbyZUBSewSxZhQsh6dXswUagbBEQDlyW0th1afzYZwPcqW7ycMiB6CprvWE4m/UW/IzR4YRMHtOcilpQMq+tpTauBLw+jvEfaAI05ONuMUqwnYOjWpzwMOOM3XPe+0r6zMqiZ+W3qK8zJpPV+JAabz07aPphiiRWg0sdV4PY4659e+u89W9RsL/IXuCPjrCiraeARsroWRg8ULHhs2O8w2nUrpBc1oILr8wwzdq0CJzIGWm2ChSp6f5vOlrn4ZFvWVL4RnftybdT3kTFaYYs+V4hpRUNJ8CrjSzWPZvLxQA+5I5HLnGuyzcuWjm4ziGAuRoP8y5mUXMJdgOHZJoAMCDGWvf44WMRwwE6zhjBJTDPYzXATqgifxR5BliMLlLYBmsDX8g=
  - secure: MFZAFRcqwkPz7P3Yb5vvYMl3td4JJO0ixkVZMq/vw+YkI/7OkqoSO0Mih18+6Rt4t0pSw8vlTy43UzX0VZ4tQFuo4tJnsZoqhDBcom2siKlp7RcsZppyAvjfm7/j7a+YO7nKR7Q6VS7kaTiTirLVejWwT98vUno31VUA6vvtuHEhcLYOxn93hpe/v/xn9VudRsAngSIfbf/zeh6qxnRSNnwKi6lYUeql7DReTkkXaC1FRms7FEX+QMv6f8eA9BJEn4mLlfja/HYmIQ8FysCzeyYU0TAbQt1U5FlxRsfGvg1ta8M2z9h3rCiFWcO6VG5gdWI01BjVTyLJK62no0iM/54szenS1AFvKkHlvRkuLQM3JvKEAxmL+E50pxwZ/4imHru5tqrbIyQEYuGBuBs/hbFaIhN0eEHQevJAqeY6vkyvNUArss5pN8IEM5MA4IRHw+ILymTq0LOhWaVdUBa2sfym2P8IGF/ERt/6DZifENcMxMNJ3YKKz7F2YKZT4vjYHP3Z/FFz4B8uM1EclAcnJ2j/OBQ62L+LRyw2FgGUUGvfj3C5a0vpV2WfZiCvu+7rqCJKd9NYrT/cShQ6LC5Nan4yejpirS+5Z9pVa7EHyZUg30qZ3CJf9SUdg4PIPHItMJBD65pQnFwATUhAeBj/aHrYLLnw9m/RgwUUOXvzPnU=
before_install: 
jobs:
  include:
  - stage: prereq
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker build -t credb-dep -f docker/credb-dep.Dockerfile .
    - docker tag credb-dep $DOCKER_USERNAME/credb-dep
    - docker push $DOCKER_USERNAME/credb-dep
  - stage: build
    env: sgx_mode=simulation
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode
      --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: build
    env: sgx_mode=fake_enclave
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode
      --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_downstream  credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_downstream  credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
      #- docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb
      #../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
