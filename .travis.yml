sudo: required
language: cpp
services:
- docker
cache:
  directories:
  - "$CACHE_DIR"
env:
  global:
  - CACHE_DIR=$HOME/.cache/docker
  - CACHE_FILE_CREDB_DEP=$CACHE_DIR/credb-dep
  - CACHE_FILE_CRED=$CACHE_DIR/credb
  - secure: Zz02UVYOIfQds+YDtSE7YmD7EUhkHrLZsj0wc13HhVmr1gZZlUFEx+16PmO7Z0GsO8NBzn251l3ErZrdPoMZh20w2rMc1g+kLc2XjNtk8VE5yfOXeSeAX4Ct6IP9j9HN+I8uaMx0vKlz6/0DhIY1U/70+g3UL8GfCTDujBa9DpfSV0mB3lj+Isir8Ybpw5LFTgqh6Ri5IAxB578FJRqxHZq0wy5cBYPy6iGmBNsU304TzqZeu667Z1HFjYUleN25K05Cinf+qrh/LWE9d+WVDc5YnSgIsSQ2NlBCVQPeoW/wpP2MEg1hw14fMENggiQvJz81ggyCYrF9yQXJLwwxhSEdpgUplEd95iORE9dILSoXuH52Le5MGdA08DyTOK3r6PHdoFmWye+i/01hjzJfbu6tedwEpDcHu31LaJkRO5jluOMkx/6X4Le6Thl4BGsqNgLTZT2TqK+znGi8OPI8/FaY+9OaaYjT1/PYohbliXeCO2/uTVeEY9ej45doAe6CmIMBJn3+BHxr7Ag6PVUTW8hFgFy3FEYCHOzCBY1PaC3M7Knl2mdUjkhy5naX2RqQ4aKA9kQzcotQIQm/NRmh3ouHWDwqbDVuhUNPsc/YfkOGEzovUcGiAorINSVcFFWaC9W/ywYrol1aHI0KGoY5Y3kTge1XN6I/77+YPLJJiaU=
  - secure: UA6vLhWZJaCafNrQZ09vNBqHHUwhZM+bCXRwDHlcDL1eSG9uxdSPmHfzVdgfXjcKuzGtSx9sYRZwv9toVtBIzUGHYsQjC8Z/8u2ps32X0kyqhu4KCeaFnlH3uc0y84AkBPThOP2wUrgOy2ABO9zvdLE5OLSpFS/mkq92W36amBK2n+QIfh3XCzGaqeh930ue/C1dz/5n8C1U4xOn6gjJKY+F1MY3huk3j6N5eCXMDXvthWGeXiAH6+nJndE5WIWL8J9CB7AvKaEvap2f9tLVILTBMvXV08t8z0YCD18y5eDchOglSqinU9Jf2kFQi2SffG2f8cJ/XIo2l6ZqNVfhOvLMsbNCvNX0LlasT95bn0Fs6tdEZ6EyMID+vzI7MyBjBcJsNLKcQ3CMRkFoKtuMtIbxDbx7vkRlMCG44v6b8NMsZx8CbVo9epfIpQbs/64KYfBU1JrRfN0FO6GXzIh+ip99oYBfFzUhA1TnSG3qoPwyMlE3YG7mgy6pDvXBzXd3FgFaFk3qNyXpDqwQnz4PCuIN8PDh90DoPOQ8FbvO42yY4ZCufw7c2tJL8Cm//CXamYOQk+rGHaFLuTOF7Csvzy99DIVP+5BByxhvVg94z0ETI8Yz3q9JmTwV5YulQgtIuOqzQdguZS/9gy2z4LeCtwPQGBAoi+m/ADHukEIkMYk=
before_install: 
jobs:
  include:
  - stage: prereq
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker build -t credb-dep -f docker/credb-dep.Dockerfile .
    - docker tag credb-dep $DOCKER_USERNAME/credb-dep
    - docker push $DOCKER_USERNAME/credb-dep
  - stage: build
    env: sgx_mode=simulation
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg
      sgx_mode=$sgx_mode --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: build
    env: sgx_mode=fake_enclave
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASS"
    - docker pull $DOCKER_USERNAME/credb-dep
    - docker tag $DOCKER_USERNAME/credb-dep credb-dep
    - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg
      sgx_mode=$sgx_mode --build-arg buildtype=release .
    - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
    - docker push $DOCKER_USERNAME/credb-${sgx_mode}
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode credb ../docker/run-clang-tidy.sh
    - docker run --rm -it -e sgx_mode credb ../docker/run-doxygen.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_downstream  credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=multi_get         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_put         credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_downstream  credb ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=multi_update      credb ../docker/run-test.sh
  - stage: test
    env: sgx_mode=simulation
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
  - stage: test
    env: sgx_mode=fake_enclave
    script:
    - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
    - docker tag $DOCKER_USERNAME/credb-${sgx_mode} credb
    - docker run --rm -it -e sgx_mode -e run_test=witness                   credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=call_program              credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb
      ../docker/run-test.sh
    - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb
      ../docker/run-test.sh
