sudo: required
language: cpp
services:
  - docker
cache:
  directories:
    - $CACHE_DIR

env:
  global:
    - CACHE_DIR=$HOME/.cache/docker
    - CACHE_FILE_CREDB_DEP=$CACHE_DIR/credb-dep
    - CACHE_FILE_CRED=$CACHE_DIR/credb

before_install:
jobs:
    include:
        - stage: prereq
          script:
            - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            - docker build -t credb-dep -f docker/credb-dep.Dockerfile .
            - docker images
            - docker tag credb-dep $DOCKER_USERNAME/credb-dep
            - docker push $DOCKER_USERNAME/credb-dep
        - stage: build
          env:  sgx_mode=simulation
          script:
            - docker pull $DOCKER_USERNAME/credb-dep 
            - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode --build-arg buildtype=release .
            - docker images
            - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
            - docker push $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode credb-${sgx_mode} credb ../docker/run-clang-tidy.sh
            - docker run --rm -it -e sgx_mode credb-${sgx_mode} ../docker/run-doxygen.sh
        - stage: build
          env:  sgx_mode=fake_enclave
          script:
            - docker pull $DOCKER_USERNAME/credb-dep 
            - docker build -t credb-${sgx_mode} -f docker/credb.Dockerfile --build-arg sgx_mode=$sgx_mode --build-arg buildtype=release .
            - docker images
            - docker tag credb-${sgx_mode} $DOCKER_USERNAME/credb-${sgx_mode}
            - docker push $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode credb-${sgx_mode} credb ../docker/run-clang-tidy.sh
            - docker run --rm -it -e sgx_mode credb-${sgx_mode} ../docker/run-doxygen.sh
        - stage: test
          env: sgx_mode=simulation
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb ../docker/run-test.sh
            -  docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb ../docker/run-test.sh
        - stage: test
          env: sgx_mode=fake_enclave
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=0 credb ../docker/run-test.sh
            -  docker run --rm -it -e sgx_mode -e run_test=unit_test -e downstream=1 credb ../docker/run-test.sh
        - stage: test
          env: sgx_mode=simulation
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=multi_get                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_put                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_downstream          credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_update              credb ../docker/run-test.sh
        - stage: test
          env: sgx_mode=fake_enclave
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=multi_get                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_put                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_downstream          credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=multi_update              credb ../docker/run-test.sh
        - stage: test
          env: sgx_mode=simulation
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=witness                   credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=call_program              credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb ../docker/run-test.sh
        - stage: test
          env: sgx_mode=fake_enclave
          script:
            - docker pull $DOCKER_USERNAME/credb-${sgx_mode}
            - docker run --rm -it -e sgx_mode -e run_test=witness                   credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=call_program              credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=bank_test                 credb ../docker/run-test.sh
            - docker run --rm -it -e sgx_mode -e run_test=concurrent_transactions   credb ../docker/run-test.sh
